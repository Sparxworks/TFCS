option explicit

'-------------------------------------------------------------------------------------------------------------
' This script demonstrates the available functionality in the EAST toolkit
'
' To use it:
'
'  1) Create a new VB script named 'EAST_EventHandlers' and paste the contents of this file into it
'  2) Open the EAST control panel (main menu Extensions / Addin windows)
'  3) Make sure that in the EAST controlpanel logging is enabled and loglevel is set to 'Info'
'  4) Press 'Reload scripts' on the control panel
'  5) EAST will now parse the EAST_EventHandlers script for event handlers. The results are displayed in the
'     EAST tab in the EA output window
'
' The EAST scripting engine that runs the script partly mimics the EA scripting environment:
'       - the global 'Repository' object is available to the script
'       - the 'Session' objects is partly implemented as well
' Also EAST utility functions are available through the global object 'EAST'
' This means you can run/debug script using the EA script runner/debugger as well,
' eg for testing purposes (but only if you do not use the EAST object)
'-------------------------------------------------------------------------------------------------------------

'option explicit

const MNU_EAST = "-EA Scripting Toolkit"
const Menu1 = "Logging"
const Menu2 = "Sleep"
const Menu3 = "Messagebox"
const Menu4 = "-Custom dialogs"
const Menu41 = "Modal dialog"
const Menu42 = "Popup window"
const Menu43 = "View"
const Menu44 = "Debug window in IE"


' Create a menu item for demo
Function EA_GetMenuItems(MenuLocation, MenuName)
    set EA_GetMenuItems = nothing
   
    if(MenuLocation = "Diagram" and MenuName = "") then
        ' No specific menus
    elseif MenuLocation = "TreeView" and MenuName = "" then
        ' No specific menus
    elseif MenuLocation = "MainMenu" then
        EAST.logError(MenuName)
        if(MenuName = MNU_EAST) then
            dim menus(4)
            menus(0) = "-"
            menus(1) = Menu1
            menus(2) = Menu2
            menus(3) = Menu3
            menus(4) = Menu4
            EA_GetMenuItems = menus
        elseif(MenuName = Menu4) then
            dim menus4(3)
            menus4(0) = Menu41
            menus4(1) = Menu42
            menus4(2) = Menu43
            menus4(3) = Menu44
            EA_GetMenuItems = menus4
        end if
    end if
end Function

Sub EA_MenuClick( MenuName , ItemName )
    if Menuname = MNU_EAST then
        select case itemName
            case Menu1
                TestLogging()
            case Menu2
                TestSleep()
            case Menu3       
                TestMsgBox()
        end select
    elseif Menuname = menu4 then
        select case itemName
            case Menu41
                TestDlgMultiselect()
            case Menu42
                TestViewAllDiagrams()
            case Menu43
                TestTabbedView()
            case Menu44
                TestDebugInIE()
        end select
    end if
end sub

sub RunDemo
'    TestLogging()            
'    TestSleep()            
'    TestMsgBox()            ' *Modal* MsgBox
'    TestInoutBox()            ' *Modal* inputBox
'    TestDlgRadiobuttons()    ' Plain select option dialog
'    TestDlgMultiselect()     ' Execute SQL to retrieve all diagrams, display in modal multi-select dialog
end sub



' Shows the various loggin methods
sub TestLogging()
    ' Enable logging, set loglevel to DEBUG. Do not pause logging
    EAST.LogStart("TestLogging")
    EAST.SetLogParms true,4,false
    EAST.LogInfo("This is informational")
    EAST.LogWarning("This is a warning")
    EAST.LogInfo("This is informational")
    EAST.LogDebug("This is a debug message")
    EAST.MsgBox "Press OK (logging will be paused)",0,"TestLogging"
    ' Pause logging (errors will still be displayed in a mesagebox, lower logmessages are suppressed)
    EAST.SetLogParms true,4,true
    EAST.LogError("Errors are still displayed even if logging is paused"+vbcrlf+"but in a *messagebox*")
    ' Logline below is suppressed since logging is paused
    EAST.LogWarning("This warning is not shown in the log")
    ' restart logging and change loglevel to start/stop
    EAST.MsgBox "Press OK (logging will again continue)",0,"TestLogging"
    EAST.SetLogParms true,2,false
    EAST.LogWarning("This warning is logged since logging is again active")
    EAST.LogInfo("This info is suppressed since loglevel is START/STOP")
    EAST.LogEnd("TestLogging") ' must match LogStart.
end sub

' Halt sript for a number of milliseconds
sub TestSleep()
    EAST.LogStart("TestSleep")
    EAST.SetLogParms true,3,false ' enable logging and force logging info messages
    EAST.LogInfo("Pausing script for 600 mseconds at a time")
    dim i, now, andNow
    for i = 1 to 300
        now = timer()
        EAST.sleep(600)
        andNow = timer()
        dim wait: wait = 1000*(andNow-now)
        EAST.LogInfo("This was a wait of "&wait&" milliseconds")
    next
    EAST.LogStart("TestSleep")
end sub

' Display a messagebox and force the user to make a choice before continuing
' The values in the second parameter are explained in 'http://msdn.microsoft.com/en-us/library/139z2azd%28v=vs.80%29.aspx'
sub TestMsgBox()
    dim result
    result = EAST.MsgBox( _
        "Contrary to Session.Prompt this dialogbox is modal:"&vbCRLF& _
        "You cant do anything else in EA until you close this dialogbox", _
        3+16+256,"Test messagebox")
           
    EAST.MsgBox "You closed the previous dialogbox with action '" & result&"'", _
        0,"Test messagebox"
end sub

sub TestDlgMultiselect()
    EAST.MsgBox "The next screen will allow you to select"&vbcrlf& _
		"one or more diagrams in the current model."&vbCRLF& _
		"The screen prevents further interaction untill it is closed."&vbCRLF&vbCRLF& _
		"Press OK to continue.", _
        0,"Demo modal dialog"
    ' Execute query without args
    dim dict: set dict = EAST.ExecuteSQL("Select diagram_id as ID, name from t_diagram order by name asc","")
    dict.add "multiselect",1
    EAST.OpenDialog "MultiSelectDialog.html","Select one or more diagrams",dict
    dim args: args = Split(dict.item("RESULT"),"|")
	if dict.item("RESULT") = "" then
		EAST.MsgBox "You cancelled!", 0,"EA script"
    else
		EAST.MsgBox "You selected diagrams "&dict.item("RESULT"), 0,"EA script"
	end if
 end sub

sub TestViewAllDiagrams()
    EAST.MsgBox "The next screen will open a popup window that shows all diagrams in the model."&vbCRLF& _
				"By clicking on a diagram in the list the diagram will be selected in the project browser."&vbCRLF& _
				"The window will hover above other windows and will remain open until explicitly closed by the user."&vbCRLF& _
				"The window reacts to changes in the diagram list of the model (adding/remiving diagrams)."&vbCRLF&vbCRLF& _
		"Press OK to continue.", _
        0,"Demo popup window"
	EAST.Popup "ViewAllDiagrams.html","List of diagrams in the model"
 end sub


sub TestDebugInIE()
    EAST.MsgBox "The next screen will open in an instance of Microsift Internet Explorer."&vbCRLF& _
				"By pressing F12 you can debug the scripts in the window like any normal webpage."&vbCRLF& _
				"Put for instance a break on the entry point of 'ItemSelected' and 'EA_OnContextItemChanged' and"&vbCRLF& _
				"click on a diagram. When stepping over 'ShowInProjectView' in the debugger the "&vbCRLF& _
				"event 'EA_OnContextItemChanged' is fired by EA, EAST sends this to the screen where it is trapped"&vbCRLF&vbCRLF& _
				"by the debugger." & _
				"Press OK to continue.", _
        0,"Demo popup window"	
		EAST.OpenInIE "ViewAllDiagramsInIE.html","List of diagrams in the model"
end sub

sub TestTabbedView()
    EAST.MsgBox "The next screen will open a window that will become part of the EA GUI."&vbCRLF&vbCRLF& _
		"Press OK to continue.", _
        0,"Tabbed views"
    EAST.Open "ViewAllDiagrams.html","Model diagrams"
end sub


 'sub TestDlgRadiobuttons()
'    dim dict : set dict = CreateObject("Scripting.Dictionary")           
'    dict.add 0,"Use case"
'    dict.add 1,"Werkinstructie"
'    dict.add 2,"BedrijfsProces"
'    EAST.OpenDialog("tfcsSelectRadio.html","Selecteer het type workflow",dict)
'    EAST.LogInfo("User selected "&dict.item("RESULT"))
'end sub

'
' Adds the location to a diagram and puts an image on the clipboard
'
